@model FootballShare.Entities.Pools.Pool

@{
    ViewData["Title"] = "Edit " + Model.Name;
    var parameters = new Dictionary<string, string>
    {
        { "id", Model.Id.ToString() }
    };
}

<h1>Edit @Html.DisplayFor(modelItem => modelItem.Name)</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" class="form-control" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPublic" /> @Html.DisplayNameFor(model => model.IsPublic)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="StartingBalance" class="control-label"></label>
                <input asp-for="StartingBalance" class="form-control" />
                <span asp-validation-for="StartingBalance" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Details" asp-all-route-data="parameters">Back to Pool Details</a> |
    <a asp-action="Delete" asp-all-route-data="parameters">Delete Pool</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
